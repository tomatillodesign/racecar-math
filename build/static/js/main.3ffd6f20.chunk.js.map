{"version":3,"sources":["RacecarHeader.js","QuizProblem.js","QuizBody.js","Score.js","Settings.js","Summary.js","Welcome.js","NameForm.js","Quiz.js","RacecarFooter.js","App.js","serviceWorker.js","index.js"],"names":["RacecarHeader","className","icon","faCarSide","QuizProblem","props","state","value","handleChange","bind","handleSubmit","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","event","this","setState","target","typeOfProblem","difficulty","num1","num2","problem","completedProblem","correctAnswer","parseInt","answer","answerSubmit","isCorrect","elapsed","Date","now","startTime","formattedElapsed","end","console","log","preventDefault","refs","quizInput","focus","start","onSubmit","id","ref","type","min","step","pattern","autoFocus","onChange","required","React","Component","QuizBody","answerList","randomIntFromInterval","max","random","JSON","stringify","Score","score","numberCorrect","totalNumQuestions","Settings","showSummary","showSummaryYes","onClick","showSummarytoUser","showSummaryNo","hideSummaryfromUser","colorSchemeOptions","label","defaultValue","currentColorScheme","questionTypeOptions","defaultQuestionType","difficultyOptions","defaultDifficulty","options","changeColors","setQuestionType","setQuestionDifficulty","e","window","confirm","startOver","toggleViewSettings","faCog","Summary","items","map","item","index","key","faCheckSquare","faTimesCircle","Welcome","userName","NameForm","active","Quiz","isActive","isMenuOpened","isTimed","startQuiz","offCanvasClick","resetColors","viewSettings","backgroundColors","answerObj","prevState","width","transitionDuration","effect","position","faFlagCheckered","RacecarFooter","faHeart","faCoffee","App","colorScheme","appClasses","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ffd6f20.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\n// get our fontawesome imports\nimport {\n  faCarSide,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction RacecarHeader() {\n  return (\n    <header className=\"App-header\">\n      <h1>\n        Racecar Math\n        <span className=\"header-icons\">\n          <FontAwesomeIcon icon={faCarSide} />\n        </span>\n      </h1>\n    </header>\n  );\n}\n\nexport default RacecarHeader;\n","import React from \"react\";\nimport \"./App.css\";\n\nclass QuizProblem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.millisToMinutesAndSeconds = this.millisToMinutesAndSeconds.bind(this);\n\n  }\n\n\n  millisToMinutesAndSeconds(millis) {\n       var minutes = Math.floor(millis / 60000);\n       var seconds = ((millis % 60000) / 1000).toFixed(1);\n       return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    // event.preventDefault();\n    // alert(\"QuizProblem handleSubmit: \" + this.state.value);\n\n    const typeOfProblem = this.props.typeOfProblem;\n    const difficulty = this.props.difficulty;\n    const num1 = this.props.num1;\n    const num2 = this.props.num2;\n    const problem = this.props.problem;\n    const completedProblem = this.props.completedProblem;\n    const correctAnswer = parseInt(this.props.answer);\n    const answerSubmit = parseInt(this.state.value);\n    var isCorrect = null;\n    if (answerSubmit === correctAnswer) {\n      isCorrect = true;\n    } else {\n      isCorrect = false;\n    }\n\n\n    const endTime = Date.now();\n    const startTime = this.props.startTime;\n    const elapsed = endTime - startTime;\n    const formattedElapsed = this.millisToMinutesAndSeconds(elapsed);\n    // console.log('ELAPSED: ' + formattedElapsed);\n\n    const answer = {\n      typeOfProblem,\n      difficulty,\n      num1,\n      num2,\n      problem,\n      completedProblem,\n      correctAnswer,\n      answerSubmit,\n      formattedElapsed,\n      isCorrect\n    };\n\n    //alert(\"QuizProblem handleSubmit: \" + this.state.value);\n    //this.props.answerSubmit(this.state.value);\n    this.props.answerSubmit(answer);\n    this.setState({ value: \"\" });\n\n    let end = Date.now();\n    console.log('End Time: ' + end);\n\n    event.preventDefault();\n  }\n\n  componentDidUpdate(){\n       console.log('componentDidUpdate');\n       this.refs.quizInput.focus();\n     }\n\ncomponentDidMount() {\n     let start = Date.now();\n     console.log('Mounted / Start Time: ' + start);\n}\n\n  render() {\n\n    return (\n      <div className=\"clb-quiz-problem-area\">\n        <div className=\"math-problem-numbers\">{this.props.problem}</div>\n        <form onSubmit={this.handleSubmit} id=\"math-answer-form\">\n          <label>\n            Your Answer:\n            <input\n               ref=\"quizInput\"\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              pattern=\"[0-9]\"\n              autoFocus={true}\n              value={this.state.value}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\n\nexport default QuizProblem;\n","import React from \"react\";\nimport QuizProblem from \"./QuizProblem\";\nimport \"./App.css\";\n\nfunction QuizBody(props) {\n  const typeOfProblem = props.typeOfProblem;\n  const difficulty = props.difficulty;\n  const answerSubmit = props.answerSubmit;\n  const answerList = props.answerList;\n  const startTime = props.startTime;\n\n  console.log(\"startime: \" + startTime);\n\n  let problem = null;\n  let num1 = null;\n  let num2 = null;\n  let answer = null;\n  let completedProblem = null;\n\n  function randomIntFromInterval(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n// addition\nif (typeOfProblem === \"addition\") {\n     if(difficulty === \"medium\") {\n          num1 = randomIntFromInterval(10, 100);\n          num2 = randomIntFromInterval(10, 100);\n     } else if (difficulty === \"easy\") {\n          num1 = randomIntFromInterval(0, 10);\n          num2 = randomIntFromInterval(0, 10);\n     } else if (difficulty === \"hard\") {\n          num1 = randomIntFromInterval(50, 999);\n          num2 = randomIntFromInterval(50, 999);\n     }\n     answer = num1 + num2;\n     problem = num1 + \" + \" + num2 + \" = ?\";\n     completedProblem = num1 + \" + \" + num2 + \" = \" + answer;\n}\n// subtraction\nelse if (typeOfProblem === \"subtraction\") {\n\n     // loop to ensure a positive answer\n     do {\n\n          if(difficulty === \"medium\") {\n               num1 = randomIntFromInterval(10, 100);\n               num2 = randomIntFromInterval(10, 100);\n          } else if (difficulty === \"easy\") {\n               num1 = randomIntFromInterval(0, 10);\n               num2 = randomIntFromInterval(0, 10);\n          } else if (difficulty === \"hard\") {\n               num1 = randomIntFromInterval(50, 999);\n               num2 = randomIntFromInterval(50, 999);\n          }\n          answer = num1 - num2;\n          problem = num1 + \" - \" + num2 + \" = ?\";\n          completedProblem = num1 + \" - \" + num2 + \" = \" + answer;\n\n     } while ( answer <= 0 );\n\n}\n// multiplication\nelse if (typeOfProblem === \"multiplication\") {\n\n     if(difficulty === \"medium\") {\n          num1 = randomIntFromInterval(5, 15);\n          num2 = randomIntFromInterval(5, 15);\n     } else if (difficulty === \"easy\") {\n          num1 = randomIntFromInterval(0, 8);\n          num2 = randomIntFromInterval(0, 8);\n     } else if (difficulty === \"hard\") {\n          num1 = randomIntFromInterval(5, 30);\n          num2 = randomIntFromInterval(5, 30);\n     }\n     answer = num1 * num2;\n     problem = num1 + \" × \" + num2 + \" = ?\";\n     completedProblem = num1 + \" × \" + num2 + \" = \" + answer;\n\n}\n// division\nelse if (typeOfProblem === \"division\") {\n\n     // loop to ensure an integer answer\n     do {\n\n          if(difficulty === \"medium\") {\n               num1 = randomIntFromInterval(5, 150);\n               num2 = randomIntFromInterval(2, 15);\n          } else if (difficulty === \"easy\") {\n               num1 = randomIntFromInterval(0, 24);\n               num2 = randomIntFromInterval(1, 8);\n          } else if (difficulty === \"hard\") {\n               num1 = randomIntFromInterval(10, 500);\n               num2 = randomIntFromInterval(5, 250);\n          }\n          answer = num1 / num2;\n          problem = num1 + \" ÷ \" + num2 + \" = ?\";\n          completedProblem = num1 + \" ÷ \" + num2 + \" = \" + answer;\n\n     } while ( ((answer - Math.floor(answer)) !== 0) || (num1 === num2) );\n\n}\n\n  console.log(\"answerList: \" + JSON.stringify(answerList));\n\n  return (\n    <main className=\"clb-quiz-body-area\">\n      <QuizProblem\n        typeOfProblem={typeOfProblem}\n        difficulty={difficulty}\n        startTime={startTime}\n        answerSubmit={answerSubmit}\n        num1={num1}\n        num2={num2}\n        answer={answer}\n        problem={problem}\n        completedProblem={completedProblem}\n      />\n    </main>\n  );\n}\n\nexport default QuizBody;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction Score(props) {\n\n     const score = Math.floor((props.numberCorrect / props.totalNumQuestions) * 100);\n\n     if( props.totalNumQuestions > 0 ) {\n          return <h2 className=\"current-score\">Score: {score}%</h2>\n     } else {\n          return null;\n     }\n\n}\n\nexport default Score;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Select from 'react-select';\n\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Settings(props) {\n\n\n  // Summary Buttons ------------------- //\n  let showSummary = props.showSummary;\n  let showSummaryYes = (\n    <button onClick={props.showSummarytoUser} className=\"show-summary true\">\n      Yes\n    </button>\n  );\n  let showSummaryNo = (\n    <button onClick={props.hideSummaryfromUser} className=\"show-summary false\">\n      No\n    </button>\n  );\n\n  if (showSummary === true) {\n    showSummaryYes = (\n      <button\n        onClick={props.showSummarytoUser}\n        className=\"show-summary true active\"\n      >\n        Yes\n      </button>\n    );\n  }\n  if (showSummary === false) {\n    showSummaryNo = (\n      <button\n        onClick={props.hideSummaryfromUser}\n        className=\"show-summary false active\"\n      >\n        No\n      </button>\n    );\n  }\n\n\n\n       // Color Scheme -- SELECT\n       const colorSchemeOptions = [\n            { value: 'blue', label: 'Blue' },\n            { value: 'pink', label: 'Pink' },\n            { value: 'orange', label: 'Orange' },\n            { value: 'green', label: 'Green' }\n       ];\n       var defaultValue = colorSchemeOptions[0];\n       if( props.currentColorScheme === 'pink' ) { defaultValue = colorSchemeOptions[1]; }\n       if( props.currentColorScheme === 'orange' ) { defaultValue = colorSchemeOptions[2]; }\n       if( props.currentColorScheme === 'green' ) { defaultValue = colorSchemeOptions[3]; }\n\n\n       // Type of Question -- SELECT\n       const questionTypeOptions = [\n            { value: 'addition', label: '+ Addition' },\n            { value: 'subtraction', label: '– Subtraction' },\n            { value: 'multiplication', label: '× Multiplication' },\n            { value: 'division', label: '÷ Divison' }\n       ];\n\n       var defaultQuestionType = questionTypeOptions[0];\n       if( props.typeOfProblem === 'subtraction' ) { defaultQuestionType = questionTypeOptions[1]; }\n       if( props.typeOfProblem === 'multiplication' ) { defaultQuestionType = questionTypeOptions[2]; }\n       if( props.typeOfProblem === 'division' ) { defaultQuestionType = questionTypeOptions[3]; }\n\n\n       // Difficulty -- SELECT\n       const difficultyOptions = [\n            { value: 'easy', label: 'Easy' },\n            { value: 'medium', label: 'Medium' },\n            { value: 'hard', label: 'Hard' }\n       ];\n\n       var defaultDifficulty = difficultyOptions[0];\n       if( props.difficulty === 'medium' ) { defaultDifficulty = difficultyOptions[1]; }\n       if( props.difficulty === 'hard' ) { defaultDifficulty = difficultyOptions[2]; }\n\n    return (\n      <div className=\"clb-settings revealed\">\n        <div className=\"single-setting-area colors\">\n          <h3>Racecar Colors</h3>\n          <Select options={colorSchemeOptions} defaultValue={defaultValue} onChange={props.changeColors} id=\"choose-colors-select\" />\n        </div>\n        <div className=\"single-setting-area question-types\">\n          <h3>Type of Math</h3>\n          <Select options={questionTypeOptions} defaultValue={defaultQuestionType} onChange={props.setQuestionType} id=\"question-type-select\" />\n        </div>\n        <div className=\"single-setting-area difficulty\">\n          <h3>Difficulty</h3>\n          <Select options={difficultyOptions} defaultValue={defaultDifficulty} onChange={props.setQuestionDifficulty} id=\"difficulty-select\" />\n        </div>\n        <div className=\"single-setting-area\">\n          <h3>Show Summary?</h3>\n          {showSummaryYes}\n          {showSummaryNo}\n        </div>\n        <div className=\"single-setting-area start-over\">\n          <button\n            onClick={e =>\n              window.confirm(\n                \"Are you sure you want to start over? Your name and score will be erased from this page.\"\n              ) && props.startOver(e)\n            }\n          >\n            Start Over\n          </button>\n        </div>\n        <button onClick={props.toggleViewSettings} id=\"hide-settings\">\n          <FontAwesomeIcon icon={faCog} /> Hide Settings\n        </button>\n      </div>\n    );\n  \n}\n\nexport default Settings;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { faCheckSquare,\n          faTimesCircle\n } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nfunction Summary(props) {\n\n     //Previous Answers: {JSON.stringify(props.answerList)}\n\n     const items = props.answerList.map((item, index) =>\n               <div className=\"single-answer\"><div className=\"question-number\">Question {index+1}</div>\n                    {item.isCorrect === true &&\n                    <div key={index} className=\"single-answer-result correct\">\n                              <div className=\"correct-answer\">{item.completedProblem}\n                                 <span className=\"summary-correct\">\n                                   <FontAwesomeIcon icon={faCheckSquare} />\n                                 </span>\n                            </div>\n                            </div>\n                     }\n                     {item.isCorrect === false &&\n                          <div key={index} className=\"single-answer-result incorrect\">\n                               <div className=\"correct-answer\">{item.completedProblem}\n                             <span className=\"summary-wrong\">\n                               <FontAwesomeIcon icon={faTimesCircle} />\n                             </span>\n                        </div>\n                        <div className=\"single-answer-user\">Your Answer: {item.answerSubmit}</div>\n                        </div>\n                      }\n               <div className=\"single-answer-user time-elapsed\">Time {item.formattedElapsed}</div>\n               </div>);\n\n     if(props.showSummary) {\n\n            return (\n              <div className=\"summary-area\">\n                <h2>Your Answers</h2>\n                <div className=\"summary\">\n                   {items}\n               </div>\n              </div>\n            );\n\n       } else {\n            return (<div className=\"summary-hidden\"></div>);\n       }\n}\n\nexport default Summary;\n","import React from \"react\";\nimport \"./App.css\";\n\nconst Welcome = (props) => {\n\n     if( !props.userName ) {\n\n       return (\n         <div className=\"clb-welcome-area blank\">\n           <p></p>\n         </div>\n       );\n\n      } else {\n\n           return (\n             <div className=\"clb-welcome-area\">\n               <p>Welcome, {props.userName}</p>\n             </div>\n           );\n\n     }\n\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport \"./App.css\";\nimport Welcome from \"./Welcome\";\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n         value: '',\n         active: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n\n    event.preventDefault();\n    // return (<Welcome userName={this.state.value} />);\n    this.setState({active: false});\n\n  }\n\n  render() {\n       if( this.state.active ) {\n         return (\n              <>\n                <form onSubmit={this.handleSubmit} id=\"name-form\">\n                  <label>\n                  What's Your Name?\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                  </label>\n                  <input type=\"submit\" value=\"Submit\" />\n                </form>\n           <Welcome userName={this.state.value} />\n           </>\n         );\n    } else {\n         return (\n              <>\n                <Welcome userName={this.state.value} />\n                </>\n         );\n    }\n  }\n}\n\nexport default NameForm;\n","import React from \"react\";\nimport QuizBody from \"./QuizBody.js\";\nimport Score from \"./Score.js\";\nimport Settings from \"./Settings.js\";\nimport Summary from \"./Summary.js\";\nimport NameForm from \"./NameForm.js\";\nimport \"./App.css\";\n\nimport { faFlagCheckered, faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { OffCanvas, OffCanvasMenu } from \"react-offcanvas\";\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n      isMenuOpened: false,\n      typeOfProblem: \"addition\",\n      isTimed: false,\n      difficulty: \"easy\",\n      startTime: null,\n      showSummary: false,\n      numberCorrect: null,\n      totalNumQuestions: null,\n      answerList: []\n    };\n\n    this.startQuiz = this.startQuiz.bind(this);\n    this.startOver = this.startOver.bind(this);\n    this.setQuestionType = this.setQuestionType.bind(this);\n    this.setQuestionDifficulty = this.setQuestionDifficulty.bind(this);\n    this.answerSubmit = this.answerSubmit.bind(this);\n    this.showSummarytoUser = this.showSummarytoUser.bind(this);\n    this.hideSummaryfromUser = this.hideSummaryfromUser.bind(this);\n    this.offCanvasClick = this.offCanvasClick.bind(this);\n\n  }\n\n\n\n  startQuiz(event) {\n    event.preventDefault();\n    this.setState({\n         isActive: true,\n         startTime: Date.now(),\n    });\n    console.log(\"startQuiz\");\n  }\n\n\n  startOver(event) {\n    event.preventDefault();\n    this.props.resetColors(event);\n\n    this.setState({\n      isActive: false,\n      viewSettings: false,\n      typeOfProblem: \"addition\",\n      isTimed: false,\n      difficulty: \"medium\",\n      startTime: null,\n      backgroundColors: \"blue\",\n      showSummary: false,\n      numberCorrect: null,\n      totalNumQuestions: null,\n      answerList: []\n    });\n\n    console.log(\"startOver\");\n  }\n\n  setQuestionType(event) {\n    this.setState({ typeOfProblem: event.value,\n         startTime: Date.now()\n     });\n    //console.log(event);\n    console.log(\"setQuestionType\");\n  }\n\n  setQuestionDifficulty(event) {\n    this.setState({\n         difficulty: event.value,\n         startTime: Date.now()\n     });\n    console.log(\"setQuestionDifficulty\");\n  }\n\n  showSummarytoUser(event) {\n    event.preventDefault();\n    this.setState({\n         showSummary: true,\n         startTime: Date.now()\n     });\n    console.log(\"showSummarytoUser\");\n  }\n\n  hideSummaryfromUser(event) {\n    event.preventDefault();\n    this.setState({\n         showSummary: false,\n         startTime: Date.now()\n     });\n    console.log(\"hideSummaryfromUser\");\n  }\n\n  answerSubmit(answerObj) {\n\n       this.setState({ startTime: Date.now() });\n\n    // alert(\"Quiz answerSubmit: \" + JSON.stringify(answerObj));\n    this.setState({ answerList: [...this.state.answerList, answerObj] }); //simple value\n    this.setState(prevState => {\n      return { totalNumQuestions: prevState.totalNumQuestions + 1 };\n    });\n\n    if (answerObj.isCorrect === true) {\n      this.setState(prevState => {\n        return { numberCorrect: prevState.numberCorrect + 1 };\n      });\n    }\n  }\n\n\n  offCanvasClick() {\n    // toggles the menu opened state\n    this.setState({ isMenuOpened: !this.state.isMenuOpened });\n  }\n\n\n\n  render() {\n\n       console.log(this.props.currentColorScheme);\n       const currentColorScheme = this.props.currentColorScheme;\n\n    if (this.state.isActive === true) {\n      return (\n        <>\n          <NameForm />\n\n          <h2 className=\"quiz-active-message\">Complete the Question Below</h2>\n          <div className=\"type-of-question\">\n            {this.state.difficulty} &middot; {this.state.typeOfProblem}\n          </div>\n\n          <div className=\"clb-settings hidden\">\n             <button onClick={this.offCanvasClick}>\n               <FontAwesomeIcon icon={faCog} /> Show Settings\n             </button>\n          </div>\n\n          <OffCanvas\n             width={400}\n             transitionDuration={1000}\n             effect={\"overlay\"}\n             isMenuOpened={this.state.isMenuOpened}\n             position={\"right\"}\n           >\n             <OffCanvasMenu className=\"off-canvas-menu\">\n               <div className=\"settings-container\">\n                  <Settings\n                    viewSettings={this.state.viewSettings}\n                    toggleViewSettings={this.offCanvasClick}\n                    setQuestionType={this.setQuestionType}\n                    setQuestionDifficulty={this.setQuestionDifficulty}\n                    typeOfProblem={this.state.typeOfProblem}\n                    difficulty={this.state.difficulty}\n                    showSummary={this.state.showSummary}\n                    showSummarytoUser={this.showSummarytoUser}\n                    hideSummaryfromUser={this.hideSummaryfromUser}\n                    startOver={this.startOver}\n                    resetColors={this.props.resetColors}\n                    currentColorScheme={currentColorScheme}\n                    changeColors={this.props.changeColors}\n                  />\n                  </div>\n             </OffCanvasMenu>\n      </OffCanvas>\n\n          <QuizBody\n            typeOfProblem={this.state.typeOfProblem}\n            difficulty={this.state.difficulty}\n            startTime={this.state.startTime}\n            answerSubmit={this.answerSubmit}\n            answerList={this.state.answerList}\n          />\n          <Score\n            numberCorrect={this.state.numberCorrect}\n            totalNumQuestions={this.state.totalNumQuestions}\n          />\n          <Summary\n            answerList={this.state.answerList}\n            showSummary={this.state.showSummary}\n          />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <button onClick={this.startQuiz} id=\"start-quiz\">\n            Start Your Engines <FontAwesomeIcon icon={faFlagCheckered} />\n          </button>\n        </>\n      );\n    }\n  }\n}\n\nexport default Quiz;\n","import React from \"react\";\nimport \"./App.css\";\n\n// get our fontawesome imports\nimport {\n  faHeart,\n  faCoffee,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction RacecarFooter() {\n  return (\n    <footer className=\"clb-footer\">\n\n    <p className=\"version\">Version 0.6 - Nov 20, 2019</p>\n      <p>\n        Made by Chris with\n        <span className=\"header-icons\">\n          <FontAwesomeIcon icon={faHeart} />\n          <FontAwesomeIcon icon={faCoffee} />\n        </span>\n      </p>\n    </footer>\n  );\n}\n\nexport default RacecarFooter;\n","import React from \"react\";\nimport RacecarHeader from \"./RacecarHeader\";\nimport Quiz from \"./Quiz\";\nimport RacecarFooter from \"./RacecarFooter\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colorScheme: { value: 'blue', label: 'Blue' }\n    };\n\n    this.changeColors = this.changeColors.bind(this);\n    this.resetColors = this.resetColors.bind(this);\n  }\n\n  changeColors(event) {\n      console.log(event);\n      this.setState({ colorScheme: event });\n  }\n\n  resetColors(event) {\n       this.setState({ colorScheme: { value: 'blue', label: 'Blue' } });\n       console.log('RESET COLORS');\n }\n\n  render() {\n    let appClasses = \"App racecar-math \" + this.state.colorScheme.value;\n\n    return (\n      <div className={appClasses}>\n        <RacecarHeader />\n        <Quiz changeColors={this.changeColors} currentColorScheme={this.state.colorScheme.value} resetColors={this.resetColors} />\n        <RacecarFooter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// get our fontawesome imports\n// import { faHome } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}